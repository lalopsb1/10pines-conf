version: 2
jobs:
  build:
    docker:
      - image: circleci/node:12
      - image: amazon/dynamodb-local

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Instalo Serverless CLI y dependencias
          command: |
            sudo npm i -g serverless
            npm install

      - run: # testeo la branch en que estamos.
          name: "En qu√© branch estoy?"
          command: echo ${CIRCLE_BRANCH}

      # Corro tests!
      - run:
          name: Run tests
          command: npm test --passWithNoTests

      # Deployo la aplicacion
      - run:
          name: Deploy application
          command: |
            deployStage="pr-${CIRCLE_PULL_REQUEST##*/}"
            if [ "${CIRCLE_BRANCH}" == "dev" ] || [ "${CIRCLE_BRANCH}" == "prod"  ]; then
              deployStage=${CIRCLE_BRANCH}
            fi
            sls deploy --stage ${deployStage}
      - save_cache:
          paths:
            - node_modules
          key: dependencies-cache-{{ checksum "package.json" }}

  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            deployStage="staging"
            if [ "${CIRCLE_BRANCH}" == "prod" ]; then
              deployStage="production"
            fi
            cd terraform
            terraform init -input=false
            terraform plan -out tfapply -var-file ${deployStage}.variables.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            cd terraform
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply
      - apply:
          requires:
            - plan-apply
